from functools import lru_cache

from .....utils import symbols
from .....utils import types_utils


class PostingInstructionBatchDirective:

    def __init__(self, *, request_id, posting_instruction_batch, _from_proto=False):
        self.request_id = request_id
        self.posting_instruction_batch = posting_instruction_batch

    @classmethod
    @lru_cache()
    def _spec(cls, language_code=symbols.Languages.ENGLISH):
        if language_code != symbols.Languages.ENGLISH:
            raise ValueError('Language not supported')
        return types_utils.ClassSpec(
            name='PostingInstructionBatchDirective',
            docstring='''
                A [HookDirective](#classes-HookDirectives) that instructs a
                [PostingInstructionBatch](#classes-PostingInstructionBatch).
                **Only available in version 3.4.0+**.
            ''',
            public_attributes=cls._public_attributes(language_code),
            constructor=types_utils.ConstructorSpec(
                docstring='Constructs a new PostingInstructionBatchDirective',
                args=cls._public_attributes(language_code)
            )
        )

    @classmethod
    @lru_cache()
    def _public_attributes(cls, language_code=symbols.Languages.ENGLISH):
        if language_code != symbols.Languages.ENGLISH:
            raise ValueError('Language not supported')

        return [
            types_utils.ValueSpec(
                name='request_id',
                type='str',
                docstring='''
                    A unique ID generated by the client (payment processor) that is used for
                    idempotency.
                '''
            ),
            types_utils.ValueSpec(
                name='posting_instruction_batch',
                type='PostingInstructionBatch',
                docstring='''
                    An atomic batch of PostingInstructions that will be (or have been) all accepted
                    or all rejected. Returns a List[PostingInstruction].
                '''
            ),
        ]
